// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);
  outline: none;
  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    outline: none;
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    outline: none;
  }

  &:active,
  &.active{
    outline: none;
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover {
      outline: none;
      color: $color;
      background-color: darken($background, 20%);
          border-color: darken($border, 23%);
    }
  }

  &.disabled,
  &:disabled {
    cursor: $cursor-disabled;
    border-color: lighten($explosive, 10%);
    background-color: $explosive;
    color: $american-gray;
    @include box-shadow(none);
    &:focus,
    &.focus {
      background-color: $explosive;
          border-color: $border;
    }
    @include hover {
      background-color: $explosive;
          border-color: lighten($explosive, 10%);
                 color: $american-gray;
    }
  }
}

@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $color;
        border-color: $color;
  }

  &:focus,
  &.focus {
    outline: none;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    outline: none;
    color: $color-hover;
    background-color: $color;
        border-color: $color;

    &:hover,
    &:focus,
    &.focus {
      outline: none;
      color: $color-hover;
      background-color: darken($color, 17%);
          border-color: darken($color, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      border-color: lighten($color, 20%);
    }
    @include hover {
      border-color: lighten($color, 20%);
    }
  }
}

@mixin button-loading-variant($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);
  outline: none;
  color: $color;
  cursor: default;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);
  padding: 0px 0px;
  &:focus,
  &.focus {
    outline: none;
  }

  &:active,
  &.active{
    outline: none;
    &:hover {
      outline: none;
    }
  }

  .loader {
    color: $color;
    content: -9999em;
    overflow: hidden;

    @include border-radius(50%);
    position: relative;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-animation: spin_accel 1.2s infinite ease;
    animation: spin_accel 1.2s infinite ease;
  }
}

@mixin button-outline-loading-variant($color, $color-hover: #fff) {
  color: $color;
  cursor: default;
  background-image: none;
  background-color: transparent;
  border-color: $color;
  padding: 0px 0px;

  &:focus,
  &.focus {
    outline: none;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    outline: none;

    &:hover,
    &:focus,
    &.focus {
      outline: none;
    }
  }

  .loader {
    color: $color;
    content: -9999em;
    overflow: hidden;

    @include border-radius(50%);
    position: relative;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-animation: spin_accel 1.2s infinite ease;
    animation: spin_accel 1.2s infinite ease;
  }
}


// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $border-radius, $loader-size) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  @include border-radius($border-radius);
  .loader {
    font-size: $loader-size;
    width: $loader-size;
    height: $loader-size;
    margin: $loader-size $loader-size;
  }
}

@keyframes spin_accel {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  5%,
  65% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  10%,
  59% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;
  }
  20% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;
  }
  38% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
}
