@import '../../variables';
@import '../../mixins';
@import '../../mixins/forms';
@import '../../mixins/buttons';
@import '../../mixins/border-radius';
@import '../../mixins/tab-focus';
@import '../../mixins/hover';
@import '../../mixins/breakpoints';

.ds-form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  font-weight: $font-weight-normal;
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;
  margin: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;


  @if $enable-rounded {
    border-radius: $input-border-radius;
  } @else {
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    opacity: 1;
  }

  &:disabled {
    cursor: $cursor-disabled;
  }
}

select.ds-form-control {
  &:not([size]):not([multiple]) {
    $select-border-width: ($border-width * 2);
    height: calc(#{$input-height} + #{$select-border-width});
  }

  &:focus::-ms-value {
    color: $input-color;
    background-color: $input-bg;
  }
}

.ds-form-control-file,
.ds-form-control-range {
  display: block;
}

.ds-col-form-label {
  padding-top: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
  margin-bottom: 0;
}

.ds-col-form-label-lg {
  padding-top: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
  font-size: $font-size-lg;
}

.ds-col-form-label-sm {
  padding-top: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
  font-size: $font-size-sm;
}


.ds-col-form-legend {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0;
  font-size: $font-size-base;
}

.ds-form-control-static {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-line-height;
  border: solid transparent;
  border-width: $input-btn-border-width 0;

  &.ds-form-control-sm,
  &.ds-form-control-lg {
    padding-right: 0;
    padding-left: 0;
  }
}

.ds-form-control-sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  @include border-radius($input-border-radius-sm);
}

select.ds-form-control-sm {
  &:not([size]):not([multiple]) {
    height: $input-height-sm;
  }
}

.ds-form-control-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  @include border-radius($input-border-radius-lg);
}

select.ds-form-control-lg {
  &:not([size]):not([multiple]) {
    height: $input-height-lg;
  }
}

.ds-form-group {
  margin-bottom: $form-group-margin-bottom;
}

.ds-input-caption {
  display: block;
  margin-top: $input-caption-margin-top;
}


.ds-form-check {
  position: relative;
  display: block;
  margin-bottom: $form-check-margin-bottom;

  &.disabled {
    .ds-form-check-label {
      color: $text-muted;
      cursor: $cursor-disabled;
    }
  }
}

.ds-form-check-label {
  padding-left: $form-check-input-gutter;
  margin-bottom: 0; // Override default `<label>` bottom margin
  cursor: pointer;
}

.ds-form-check-input {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;

  &:only-child {
    position: static;
  }
}

// Radios and checkboxes on same line
.ds-form-check-inline {
  display: inline-block;

  .ds-form-check-label {
    vertical-align: middle;
  }

  + .ds-form-check-inline {
    margin-left: $form-check-inline-margin-x;
  }
}

.ds-form-control-feedback {
  margin-top: $form-feedback-margin-top;
}

.ds-form-control-success,
.ds-form-control-warning,
.ds-form-control-danger {
  padding-right: ($input-padding-x * 3);
  background-repeat: no-repeat;
  background-position: center right ($input-height / 4);
  background-size: ($input-height / 2) ($input-height / 2);
}

// Form validation states
.ds-has-success {
  @include form-control-validation($brand-success);

  .ds-form-control-success {

  }
}

.ds-has-alert {
  @include form-control-validation($brand-alert);

  .ds-form-control-alert {

  }
}

.ds-form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  .ds-form-check {
    width: 100%;
  }

  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // Inline-block all the things for "inline"
    .ds-form-group {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    // Allow folks to *not* use `.ds-form-group`
    .ds-form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.ds-form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .ds-form-control-static {
      display: inline-block;
    }

    .ds-input-group {
      width: auto;
    }

    .ds-form-control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .ds-form-check {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      margin-top: 0;
      margin-bottom: 0;
    }
    .ds-form-check-label {
      padding-left: 0;
    }
    .ds-form-check-input {
      position: relative;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    // Custom form controls
    .ds-custom-control {
      display: flex;
      align-items: center;
      justify-content: center;
      padding-left: 0;
    }
    .ds-custom-control-indicator {
      position: static;
      display: inline-block;
      margin-right: $form-check-input-margin-x; // Flexbox alignment means we lose our HTML space here, so we compensate.
      vertical-align: text-bottom;
    }

    // Re-override the feedback icon.
    .ds-has-feedback .ds-form-control-feedback {
      top: 0;
    }
  }
}
